default_aes = ggplot2::aes(shape = 21,
lwd = 1,
colour = "grey",
fill = "grey",
alpha = 0.3,
stroke = 1,
n_max = NA),
draw_key = ggplot2::draw_key_point,
draw_panel = function(data, panel_params, coord) {
max_value <- data$n_max[1]
if(!is.na(max_value)) {
data <- dplyr::arrange(data, dplyr::desc(size)) %>%
head(max_value)
}
coords <- coord$transform(data, panel_params)
grid::gTree(children = grid::gList(
grid::segmentsGrob(
x0 = coords$x,
y0 = coords$y,
x1 = coords$x,
y1 = coords$y + 0.07,
gp = grid::gpar(
col = "grey"
)),
grid::textGrob(
label = coords$label,
x = coords$x,
y = coords$y + 0.07,
just = "left",
rot = 45)
))
}
)
dt[YEAR > 2000 & COUNTRY %in% c("USA"), ] %>%
ggplot2::ggplot(aes(x = DATE, y = COUNTRY, size = EQ_PRIMARY, color = DEATHS)) +
geom_timeline() +
geom_timeline_label(aes(label = LOCATION_NAME), n_max = 5) +
theme_timeline()
GeomTimelineLabel <- ggplot2::ggproto("GeomTimelineLabel", ggplot2::Geom,
required_aes = c("x","label"),
default_aes = ggplot2::aes(shape = 21,
lwd = 1,
colour = "grey",
fill = "grey",
alpha = 0.3,
stroke = 1,
n_max = NA),
draw_key = ggplot2::draw_key_point,
draw_panel = function(data, panel_params, coord) {
max_value <- data$n_max[1]
if(!is.na(max_value)) {
data <- dplyr::arrange(data, dplyr::desc(size)) %>%
head(max_value)
}
coords <- coord$transform(data, panel_params)
grid::gTree(children = grid::gList(
grid::segmentsGrob(
x0 = coords$x,
y0 = coords$y,
x1 = coords$x,
y1 = coords$y + 0.1,
gp = grid::gpar(
col = "grey"
)),
grid::textGrob(
label = coords$label,
x = coords$x,
y = coords$y + 0.1,
just = "left",
rot = 45)
))
}
)
dt[YEAR > 2000 & COUNTRY %in% c("USA"), ] %>%
ggplot2::ggplot(aes(x = DATE, y = COUNTRY, size = EQ_PRIMARY, color = DEATHS)) +
geom_timeline() +
geom_timeline_label(aes(label = LOCATION_NAME), n_max = 5) +
theme_timeline()
library(NOAA.capstone)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(leaflet)
install.packages('leaflet')
setwd("H:/Coursera/Mastering Software Development in R Spec/Building Data Visualization Tools")
# devtools::install_github("dkahle/ggmap", ref = "tidyup")
ggmap::register_google(key = "AIzaSyDOAbj7vEB-DOK6BkKHwZ4WYn6-AKIuhzI")
library(ggmap)
library(readr)
library(data.table)
library(plyr)
library(dplyr)
library(lubridate)
library(ggplot2)
library(geosphere)
dt <- load_cleaned_data("H:/Coursera/Mastering Software Development in R Spec/Building Data Visualization Tools/ebtrk_atlc_1988_2015.txt")
setDT(dt)
source('H:/Coursera/Mastering Software Development in R Spec/Capstone/NOAA.capstone/R/geom_timeline.R')
library(NOAA.capstone)
dt <- data.table::fread(file.path("inst/extdata", "signif.txt"), sep = "\t")
getwd()
setwd("H:/Coursera/Mastering Software Development in R Spec/Capstone/NOAA.capstone")
dt <- data.table::fread(file.path("inst/extdata", "signif.txt"), sep = "\t")
# WEEK 1 -----------------------------------------------------------------------
dt[is.na(MONTH), MONTH := 1 ]
dt[is.na(DAY), DAY := 1 ]
dt[, epoch := "AD"]
dt[YEAR < 0, epoch := "BC"]
# For the AD period
dt[epoch == "AD", DATE := as.Date(paste(YEAR, MONTH, DAY, sep = "-"))]
# For the BC period
dt[epoch == "BC", DATE := lubridate::ymd("0000-01-01") - lubridate::years(YEAR)]
dt[, `:=`(LATITUDE = as.numeric(LATITUDE), LONGITUDE = as.numeric(LONGITUDE))]
dt[, LOCATION_NAME := stringr::str_to_title(sub('.*\\: ', '', LOCATION_NAME))]
dt[COUNTRY == "MEXICO" & year(DATE) >= 2000, ] %>%
eq_map(DATE)
eq_map <- function(data, annot_col) {
map <- data %>%
leaflet::leaflet() %>%
leaflet::addTiles() %>%
leaflet::addCircleMarkers(lng = ~LONGITUDE,
lat = ~LATITUDE,
radius = ~EQ_PRIMARY,
weight = 1,
popup = data[[annot_col]])
map
}
dt[COUNTRY == "MEXICO" & year(DATE) >= 2000, ] %>%
eq_map(DATE)
dt <- eq_clean_data(dt)
dt[COUNTRY == "MEXICO" & year(DATE) >= 2000, ] %>%
eq_map(annot_col = DATE)
dt
dt[COUNTRY == "MEXICO" & year(DATE) >= 2000, ]
dt[COUNTRY == "MEXICO" & year(DATE) >= 2000, ] %>%
eq_map(annot_col = DATE)
dt[COUNTRY == "MEXICO" & year(DATE) >= 2000, ] %>%
leaflet()
dt[COUNTRY == "MEXICO" & year(DATE) >= 2000, ] %>%
leaflet::leaflet()
library(leaflet)
dt[COUNTRY == "MEXICO" & year(DATE) >= 2000, ] %>%
eq_map(annot_col = DATE)
dt[COUNTRY == "MEXICO" & year(DATE) >= 2000, ] %>%
leaflet::leaflet() %>%
leaflet::addTiles()
dt[COUNTRY == "MEXICO" & year(DATE) >= 2000, ] %>%
leaflet::leaflet() %>%
leaflet::addTiles() %>%
leaflet::addCircleMarkers(lng = ~ LONGITUDE,
lat = ~ LATITUDE,
radius = ~ EQ_PRIMARY,
weight = 1,
popup = DATE)
dt[COUNTRY == "MEXICO" & year(DATE) >= 2000, ] %>%
leaflet::leaflet() %>%
leaflet::addTiles() %>%
leaflet::addCircleMarkers(lng = ~ LONGITUDE,
lat = ~ LATITUDE,
radius = ~ EQ_PRIMARY,
weight = 1,
popup = ~ DATE)
eq_map <- function(data, annot_col) {
print(str(data))
map <- data %>%
leaflet::leaflet() %>%
leaflet::addTiles() %>%
leaflet::addCircleMarkers(lng = ~ LONGITUDE,
lat = ~ LATITUDE,
radius = ~ EQ_PRIMARY,
weight = 1,
popup = ~ data[[annot_col]])
map
}
dt[COUNTRY == "MEXICO" & year(DATE) >= 2000, ] %>%
eq_map()
dt[COUNTRY == "MEXICO" & year(DATE) >= 2000, ] %>%
eq_map(DATE)
dt[COUNTRY == "MEXICO" & year(DATE) >= 2000, ] %>%
eq_map(DATE)
eq_map <- function(data, annot_col) {
print(str(data[[annot_col]]))
map <- data %>%
leaflet::leaflet() %>%
leaflet::addTiles() %>%
leaflet::addCircleMarkers(lng = ~ LONGITUDE,
lat = ~ LATITUDE,
radius = ~ EQ_PRIMARY,
weight = 1,
popup = ~ annot_col)
map
}
dt[COUNTRY == "MEXICO" & year(DATE) >= 2000, ] %>%
eq_map(DATE)
eq_map <- function(data, annot_col) {
print(data$annot_col)
map <- data %>%
leaflet::leaflet() %>%
leaflet::addTiles() %>%
leaflet::addCircleMarkers(lng = ~ LONGITUDE,
lat = ~ LATITUDE,
radius = ~ EQ_PRIMARY,
weight = 1,
popup = ~ annot_col)
map
}
dt[COUNTRY == "MEXICO" & year(DATE) >= 2000, ] %>%
eq_map(DATE)
dt[COUNTRY == "MEXICO" & year(DATE) >= 2000, ] %>%
eq_map("DATE")
eq_map <- function(data, annot_col) {
print(data$annot_col)
map <- data %>%
leaflet::leaflet() %>%
leaflet::addTiles() %>%
leaflet::addCircleMarkers(lng = ~ LONGITUDE,
lat = ~ LATITUDE,
radius = ~ EQ_PRIMARY,
weight = 1,
popup = ~ annot_col)
map
}
dt[COUNTRY == "MEXICO" & year(DATE) >= 2000, ] %>%
eq_map("DATE")
data[, `:=`(label_1 = "", label_2 = "", label_3 = "")]
eq_create_label <- function(dt) {
setDT(data)
data[, `:=`(label_1 = "", label_2 = "", label_3 = "")]
data[!is.na(LOCATION_NAME), label_1 := paste("<strong>Location: </strong>", LOCATION_NAME)]
data[!is.na(EQ_PRIMARY), label_2 := paste("<strong>Location: </strong>", EQ_PRIMARY)]
data[!is.na(TOTAL_DEATHS), label_3 := paste("<strong>Location: </strong>", TOTAL_DEATHS)]
data[, popup_labels := paste(label_1, label_2, label_3, sep = '<br/>')][, `:=`(label_1 = NULL, label_2 = NULL, label_3 = NULL)]
data
}
dt[COUNTRY == "MEXICO" & year(DATE) >= 2000, ] %>%
eq_create_label() %>%
eq_map("popup_labels")
eq_create_label <- function(dt) {
setDT(dt)
dt[, `:=`(label_1 = "", label_2 = "", label_3 = "")]
dt[!is.na(LOCATION_NAME), label_1 := paste("<strong>Location: </strong>", LOCATION_NAME)]
dt[!is.na(EQ_PRIMARY), label_2 := paste("<strong>Location: </strong>", EQ_PRIMARY)]
dt[!is.na(TOTAL_DEATHS), label_3 := paste("<strong>Location: </strong>", TOTAL_DEATHS)]
dt[, popup_labels := paste(label_1, label_2, label_3, sep = '<br/>')][, `:=`(label_1 = NULL, label_2 = NULL, label_3 = NULL)]
dt
}
dt[COUNTRY == "MEXICO" & year(DATE) >= 2000, ] %>%
eq_create_label() %>%
eq_map("popup_labels")
eq_map <- function(dt, annot_col) {
map <- dt %>%
leaflet::leaflet() %>%
leaflet::addTiles() %>%
leaflet::addCircleMarkers(lng = ~ LONGITUDE,
lat = ~ LATITUDE,
radius = ~ EQ_PRIMARY,
weight = 1,
popup = ~ annot_col)
map
}
dt[COUNTRY == "MEXICO" & year(DATE) >= 2000, ] %>%
eq_create_label()
dt[COUNTRY == "MEXICO" & year(DATE) >= 2000, ] %>%
eq_create_label() %>%
eq_map("popup_labels")
dt[COUNTRY == "MEXICO" & year(DATE) >= 2000, ] %>%
eq_create_label() %>%
eq_map(annot_col = "popup_labels")
sd <- dt[COUNTRY == "MEXICO" & year(DATE) >= 2000, ] %>%
eq_create_label()
sd
View(sd)
eq_create_label <- function(dt) {
setDT(dt)
dt[, `:=`(label_1 = "", label_2 = "", label_3 = "")]
dt[!is.na(LOCATION_NAME), label_1 := paste("<strong>Location: </strong>", LOCATION_NAME)]
dt[!is.na(EQ_PRIMARY), label_2 := paste("<strong>Location: </strong>", EQ_PRIMARY)]
dt[!is.na(TOTAL_DEATHS), label_3 := paste("<strong>Location: </strong>", TOTAL_DEATHS)]
dt[, popup_text := paste(label_1, label_2, label_3, sep = '<br/>')][, `:=`(label_1 = NULL, label_2 = NULL, label_3 = NULL)]
dt
}
dt[COUNTRY == "MEXICO" & year(DATE) >= 2000, ] %>%
eq_create_label() %>%
eq_map(annot_col = "popup_text")
sd <- dt[COUNTRY == "MEXICO" & year(DATE) >= 2000, ] %>%
eq_create_label()
sd %>%
eq_map(annot_col = "popup_text")
sd %>%
eq_map(annot_col = "DATE")
sd %>%
eq_map(annot_col = DATE)
eq_map <- function(dt, annot_col) {
map <- dt %>%
leaflet::leaflet() %>%
leaflet::addTiles() %>%
leaflet::addCircleMarkers(lng = ~ LONGITUDE,
lat = ~ LATITUDE,
radius = ~ EQ_PRIMARY,
weight = 1,
popup = ~ dt[[annot_col]])
map
}
sd %>%
eq_map(annot_col = DATE)
sd %>%
eq_map(annot_col = "DATE")
dt[COUNTRY == "MEXICO" & year(DATE) >= 2000, ] %>%
eq_create_label() %>%
eq_map(annot_col = "popup_text")
eq_create_label <- function(dt) {
setDT(dt)
dt[, `:=`(label_1 = "", label_2 = "", label_3 = "")]
dt[!is.na(LOCATION_NAME), label_1 := paste("<strong>Location: </strong>", LOCATION_NAME)]
dt[!is.na(EQ_PRIMARY), label_2 := paste("<strong>Magnitude: </strong>", EQ_PRIMARY)]
dt[!is.na(TOTAL_DEATHS), label_3 := paste("<strong>Total deaths: </strong>", TOTAL_DEATHS)]
dt[, popup_text := paste(label_1, label_2, label_3, sep = '<br/>')][, `:=`(label_1 = NULL, label_2 = NULL, label_3 = NULL)]
dt
}
eq_map <- function(dt, annot_col) {
map <- dt %>%
leaflet::leaflet() %>%
leaflet::addTiles() %>%
leaflet::addCircleMarkers(lng = ~ LONGITUDE,
lat = ~ LATITUDE,
radius = ~ EQ_PRIMARY,
weight = 1,
popup = ~ dt[[annot_col]])
map
}
eq_create_label <- function(dt) {
data.table::setDT(dt)
dt[, `:=`(label_1 = "", label_2 = "", label_3 = "")]
dt[!is.na(LOCATION_NAME), label_1 := paste("<strong>Location: </strong>", LOCATION_NAME)]
dt[!is.na(EQ_PRIMARY), label_2 := paste("<strong>Magnitude: </strong>", EQ_PRIMARY)]
dt[!is.na(TOTAL_DEATHS), label_3 := paste("<strong>Total deaths: </strong>", TOTAL_DEATHS)]
dt[, popup_text := paste(label_1, label_2, label_3, sep = '<br/>')][, `:=`(label_1 = NULL, label_2 = NULL, label_3 = NULL)]
dt
}
dt[COUNTRY == "MEXICO" & year(DATE) >= 2000, ] %>%
eq_create_label() %>%
eq_map(annot_col = "popup_text")
#' \dontrun{
#'
#' readr::read_delim("earthquakes.tsv.gz", delim = "\t") %>%
#' eq_clean_data() %>%
#' dplyr::filter(COUNTRY == "MEXICO" & lubridate::year(DATE) >= 2000) %>%
#' eq_map(annot_col = "DATE")
#'
#' }
#'
#' @export
dt[COUNTRY == "MEXICO" & lubridate::year(DATE) >= 2000] %>%
eq_map(annot_col = "DATE") -> obj
str(obj)
class(obj)
dt[COUNTRY == "MEXICO" & lubridate::year(DATE) >= 2000] %>%
eq_create_label() %>%
eq_map(annot_col = "popup_text")
devtools::document()
library(NOAA.capstone)
?'%>%'
devtools::document()
devtools::document()
28+43+25+39+26+28
189/56
56*2
-28-43
-71-25
-96-39
library(NOAA.capstone)
library(NOAA.capstone)
library(dplyr)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(dplyr)
library(data.table)
library(NOAA.capstone)
```{r timeline, fig.width = 8, fig.height = 8}
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(dplyr)
library(data.table)
library(NOAA.capstone)
dt <- data.table::fread('https://www.ngdc.noaa.gov/nndc/struts/results?type_0=Exact&query_0=$ID&t=101650&s=13&d=189&dfn=signif.txt', sep = "\t")
dt <- dt %>% eq_clean_data() %>% eq_location_clean()
str(dt)
dt[YEAR > 2000 & YEAR < 2015 & COUNTRY %in% c('MEXICO'), ] %>%
ggplot2::ggplot(ggplot2::aes(x = DATE, y = COUNTRY, size = EQ_PRIMARY, color = DEATHS)) +
geom_timeline() +
geom_timeline_label(ggplot2::aes(label = LOCATION_NAME), n_max = 3) +
theme_timeline()
dt <- data.table::fread('https://www.ngdc.noaa.gov/nndc/struts/results?type_0=Exact&query_0=$ID&t=101650&s=13&d=189&dfn=signif.txt', sep = "\t")
# eq_clean_data returns a data table
test_that("eq_clean_data returns data table", {
expect_is(eq_clean_data(dt), "data.table")
})
library(testthat)
# eq_clean_data returns a data table
test_that("eq_clean_data returns data table", {
expect_is(eq_clean_data(dt), "data.table")
})
eq_clean_data(dt)
eq_clean_data(dt) %>% class()
expect_true(is.data.table(eq_clean_data(dt)))
is.data.table(eq_clean_data(dt))
is.Date(eq_clean_data(dt)$DATE)
plot <- dt %>% eq_clean_data() %>%
dplyr::filter(COUNTRY %in% c("USA", "CHINA"), YEAR > 2010) %>%
ggplot2::ggplot(aes(x = DATE, y = COUNTRY, size = EQ_PRIMARY, color = DEATHS)) +
geom_timeline()
is.ggplot(plot)
plot <- data %>% eq_clean_data() %>%
dplyr::filter(COUNTRY %in% c("USA", "CHINA"), YEAR > 2010) %>%
ggplot2::ggplot(aes(x = DATE, y = COUNTRY, size = EQ_PRIMARY, color = DEATHS)) +
geom_timeline_label(aes(label = LOCATION_NAME))
plot <- data %>% eq_clean_data() %>%
dplyr::filter(COUNTRY %in% c("USA", "CHINA"), YEAR > 2010) %>%
ggplot2::ggplot(aes(x = DATE, y = COUNTRY, size = EQ_PRIMARY, color = DEATHS)) +
geom_timeline_label(aes(label = LOCATION_NAME))
plot <- data %>% eq_clean_data() %>%
dplyr::filter(COUNTRY %in% c("USA", "CHINA"), YEAR > 2010) %>%
ggplot2::ggplot(aes(x = DATE, y = COUNTRY, size = EQ_PRIMARY, color = DEATHS)) +
geom_timeline() +
geom_timeline_label(aes(label = LOCATION_NAME))
plot <- dt %>% eq_clean_data() %>%
dplyr::filter(COUNTRY %in% c("USA", "CHINA"), YEAR > 2010) %>%
ggplot2::ggplot(aes(x = DATE, y = COUNTRY, size = EQ_PRIMARY, color = DEATHS)) +
geom_timeline() +
geom_timeline_label(aes(label = LOCATION_NAME))
plot <- dt %>% eq_clean_data() %>%
dplyr::filter(COUNTRY %in% c("USA", "CHINA"), YEAR > 2010) %>%
ggplot2::ggplot(aes(x = DATE, y = COUNTRY, size = EQ_PRIMARY, color = DEATHS)) +
# geom_timeline() +
geom_timeline_label(aes(label = LOCATION_NAME))
expect_is(myplot, "ggplot")
expect_true(is.ggplot(plot))
dt %>% eq_clean_data() %>%
dplyr::filter(COUNTRY %in% c("USA", "CHINA"), YEAR > 2010) %>%
ggplot2::ggplot(aes(x = DATE, y = COUNTRY, size = EQ_PRIMARY, color = DEATHS)) +
geom_timeline_label(aes(label = LOCATION_NAME))
is.ggplot(plot)
plot <- dt %>% eq_clean_data() %>%
dplyr::filter(COUNTRY %in% c("USA", "CHINA"), YEAR > 2010) %>%
ggplot2::ggplot(aes(x = DATE, y = COUNTRY, size = EQ_PRIMARY, color = DEATHS)) +
theme_timeline()
expect_true(is.ggplot(plot))
dt %>%
eq_clean_data() %>%
dplyr::filter(COUNTRY == "USA" & lubridate::year(DATE) >= 2010) %>%
dplyr::mutate(popup_text = eq_create_label(.))
dt %>%
eq_clean_data() %>%
dplyr::filter(COUNTRY == "USA" & lubridate::year(DATE) >= 2010) %>%
dplyr::mutate(popup_text = eq_create_label())
dt %>%
eq_clean_data() %>%
dplyr::filter(COUNTRY == "USA" & lubridate::year(DATE) >= 2010) %>%
eq_map()
#' \dontrun{
#'
#' readr::read_delim("earthquakes.tsv.gz", delim = "\t") %>%
#' eq_clean_data() %>%
#' dplyr::filter(COUNTRY == "MEXICO" & lubridate::year(DATE) >= 2000) %>%
#' eq_map(annot_col = "DATE")
#'
#' }
#'
#' @export
eq_map <- function(dt, annot_col = "DATE") {
map <- dt %>%
leaflet::leaflet() %>%
leaflet::addTiles() %>%
leaflet::addCircleMarkers(lng = ~ LONGITUDE,
lat = ~ LATITUDE,
radius = ~ EQ_PRIMARY,
weight = 1,
popup = ~ dt[[annot_col]])
map
}
dt %>%
eq_clean_data() %>%
dplyr::filter(COUNTRY == "USA" & lubridate::year(DATE) >= 2010) %>%
eq_map()
dt %>%
eq_clean_data() %>%
dplyr::filter(COUNTRY == "USA" & lubridate::year(DATE) >= 2010) %>%
eq_map(annot_col = "DATE")
map <- dt %>%
eq_clean_data() %>%
dplyr::filter(COUNTRY == "USA" & lubridate::year(DATE) >= 2010) %>%
eq_map(annot_col = "DATE")
expect_is(map, "leaflet")
class(map)
class(map) == "leaflet"
class(map) == "leaflet" %>% any()
any(class(map) == "leaflet")
expect_true(any(class(map) == "leaflet"))
eq_create_label(dt)
eq_create_label(dt)$popup_text
names(eq_create_label(dt))
any(names(eq_create_label(dt)) == "popup_text")
devtools::document
devtools::document()
library(NOAA.capstone)
lubridate::is.Date
